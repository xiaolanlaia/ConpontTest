apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

Properties properties = new Properties()
InputStream inputStream = rootProject.file('local.properties').newDataInputStream()
properties.load(inputStream)

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        applicationId "com.example.conponttest"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true }}
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation rootProject.ext.dependencies["kotlin-stdlib-jdk7"]
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["core-ktx"]
    implementation rootProject.ext.dependencies["constraintlayout"]
    implementation rootProject.ext.dependencies["junit"]
    implementation rootProject.ext.dependencies["test-ext-junit"]
    implementation rootProject.ext.dependencies["espresso-core"]
    implementation rootProject.ext.dependencies["arouter-api"]
    kapt rootProject.ext.dependencies["arouter-compiler"]


    if (!isRunLogin.toBoolean()) {// 1.如果要独立运行，那么主工程不加载它
        implementation project(path: ':login')
    }


}
